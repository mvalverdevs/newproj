version: '3'

volumes:
  newproj_postgres_data: {}
  newproj_postgres_data_backups: {}
  npm_cache: {}
  pg_admin_data: {}

services:
  api: &django
    build:
      context: ./backend/
      dockerfile: ./compose/local/Dockerfile
    depends_on:
      - redis
      - postgres
      - celeryworker
    volumes:
      - ./backend/src:/app
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=newproj
      - POSTGRES_USER=newproj
      - POSTGRES_PASSWORD=newproj
    ports:
      - "8000:8000"
    command: dev-webserver-api

  celeryworker:
    <<: *django
    depends_on:
      - redis
      - postgres
      - celerybeat
    ports: []
    command: celery-worker

  celerybeat:
    <<: *django
    depends_on:
      - redis
      - postgres
    ports: []
    command: celery-beat

  postgres:
    image: postgis/postgis:15-3.3
    volumes:
      - newproj_postgres_data:/var/lib/postgresql/data
      - newproj_postgres_data_backups:/backups
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=newproj
      - POSTGRES_USER=newproj
      - POSTGRES_PASSWORD=newproj
    ports:
      - "5432:5432"

  redis:
    image: redis:7

  frontend:
    build:
      context: ./frontend/
      dockerfile: ./compose/local/Dockerfile
    volumes:
      - ./frontend:/app
      - ./frontend/node_modules:/app/node_modules
      - npm_cache:/npm-cache
    ports:
      - '8100:8100'
    command: dev-webserver

  pgadmin:
      image: dpage/pgadmin4:latest
      environment:
      - PGADMIN_DEFAULT_EMAIL=postgres@newproj.com
      - PGADMIN_DEFAULT_PASSWORD=newproj
      - PGADMIN_LISTEN_ADDRESS=0.0.0.0
      - PGADMIN_LISTEN_PORT=5050
      ports:
        - "5050:5050"
      volumes:
        - pg_admin_data:/var/lib/pgadmin